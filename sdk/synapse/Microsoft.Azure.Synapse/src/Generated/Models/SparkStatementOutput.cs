// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SparkStatementOutput
    {
        /// <summary>
        /// Initializes a new instance of the SparkStatementOutput class.
        /// </summary>
        public SparkStatementOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SparkStatementOutput class.
        /// </summary>
        public SparkStatementOutput(int executionCount, string status = default(string), object data = default(object), string errorName = default(string), string errorValue = default(string), IList<string> traceback = default(IList<string>))
        {
            Status = status;
            ExecutionCount = executionCount;
            Data = data;
            ErrorName = errorName;
            ErrorValue = errorValue;
            Traceback = traceback;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "execution_count")]
        public int ExecutionCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public object Data { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ename")]
        public string ErrorName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "evalue")]
        public string ErrorValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "traceback")]
        public IList<string> Traceback { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
