// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Synapse.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An item of the notebook cell execution output.
    /// </summary>
    public partial class NotebookCellOutputItem
    {
        /// <summary>
        /// Initializes a new instance of the NotebookCellOutputItem class.
        /// </summary>
        public NotebookCellOutputItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NotebookCellOutputItem class.
        /// </summary>
        /// <param name="outputType">Execution, display, or stream outputs.
        /// Possible values include: 'execute_result', 'display_data',
        /// 'stream', 'error'</param>
        /// <param name="name">For output_type=stream, determines the name of
        /// stream (stdout / stderr).</param>
        /// <param name="executionCount">Execution sequence number.</param>
        /// <param name="text">For output_type=stream, the stream's text
        /// output, represented as a string or an array of strings.</param>
        /// <param name="data">Output data. Use MIME type as key, and content
        /// as value.</param>
        /// <param name="metadata">Metadata for the output item.</param>
        public NotebookCellOutputItem(string outputType, string name = default(string), int? executionCount = default(int?), object text = default(object), object data = default(object), object metadata = default(object))
        {
            Name = name;
            ExecutionCount = executionCount;
            OutputType = outputType;
            Text = text;
            Data = data;
            Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets for output_type=stream, determines the name of stream
        /// (stdout / stderr).
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets execution sequence number.
        /// </summary>
        [JsonProperty(PropertyName = "execution_count")]
        public int? ExecutionCount { get; set; }

        /// <summary>
        /// Gets or sets execution, display, or stream outputs. Possible values
        /// include: 'execute_result', 'display_data', 'stream', 'error'
        /// </summary>
        [JsonProperty(PropertyName = "output_type")]
        public string OutputType { get; set; }

        /// <summary>
        /// Gets or sets for output_type=stream, the stream's text output,
        /// represented as a string or an array of strings.
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public object Text { get; set; }

        /// <summary>
        /// Gets or sets output data. Use MIME type as key, and content as
        /// value.
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public object Data { get; set; }

        /// <summary>
        /// Gets or sets metadata for the output item.
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public object Metadata { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (OutputType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OutputType");
            }
        }
    }
}
