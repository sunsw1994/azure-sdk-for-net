// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Synapse.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Workspace resource type.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Workspace : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Workspace class.
        /// </summary>
        public Workspace()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Workspace class.
        /// </summary>
        /// <param name="id">The resource identifier.</param>
        /// <param name="name">The resource name.</param>
        /// <param name="type">The resource type.</param>
        /// <param name="location">The resource location.</param>
        /// <param name="tags">The resource tags.</param>
        /// <param name="eTag">Etag identifies change in the resource.</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="identity">Managed service identity of the
        /// workspace.</param>
        /// <param name="provisioningState">Workspace provisioning state,
        /// example Succeeded.</param>
        /// <param name="createTime">Time the workspace was created in ISO8601
        /// format.</param>
        /// <param name="version">Version of the workspace.</param>
        /// <param name="defaultStorage">Linked service reference.</param>
        /// <param name="defaultSqlServer">Linked service reference.</param>
        public Workspace(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string eTag = default(string), IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), WorkspaceIdentity identity = default(WorkspaceIdentity), string provisioningState = default(string), System.DateTimeOffset? createTime = default(System.DateTimeOffset?), string version = default(string), LinkedServiceReference defaultStorage = default(LinkedServiceReference), LinkedServiceReference defaultSqlServer = default(LinkedServiceReference))
            : base(id, name, type, location, tags, eTag)
        {
            AdditionalProperties = additionalProperties;
            Identity = identity;
            ProvisioningState = provisioningState;
            CreateTime = createTime;
            Version = version;
            DefaultStorage = defaultStorage;
            DefaultSqlServer = defaultSqlServer;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets managed service identity of the workspace.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public WorkspaceIdentity Identity { get; set; }

        /// <summary>
        /// Gets workspace provisioning state, example Succeeded.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets time the workspace was created in ISO8601 format.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createTime")]
        public System.DateTimeOffset? CreateTime { get; private set; }

        /// <summary>
        /// Gets version of the workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; private set; }

        /// <summary>
        /// Gets or sets linked service reference.
        /// </summary>
        [JsonProperty(PropertyName = "properties.defaultStorage")]
        public LinkedServiceReference DefaultStorage { get; set; }

        /// <summary>
        /// Gets or sets linked service reference.
        /// </summary>
        [JsonProperty(PropertyName = "properties.defaultSqlServer")]
        public LinkedServiceReference DefaultSqlServer { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DefaultStorage != null)
            {
                DefaultStorage.Validate();
            }
            if (DefaultSqlServer != null)
            {
                DefaultSqlServer.Validate();
            }
        }
    }
}
