// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Synapse.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// SQL script.
    /// </summary>
    public partial class SqlScript
    {
        /// <summary>
        /// Initializes a new instance of the SqlScript class.
        /// </summary>
        public SqlScript()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlScript class.
        /// </summary>
        /// <param name="content">The content of the SQL script.</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="description">The description of the SQL
        /// script.</param>
        /// <param name="type">The type of the SQL script. Possible values
        /// include: 'SqlQuery'</param>
        public SqlScript(SqlScriptContent content, IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string description = default(string), string type = default(string))
        {
            AdditionalProperties = additionalProperties;
            Description = description;
            Type = type;
            Content = content;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets the description of the SQL script.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the type of the SQL script. Possible values include:
        /// 'SqlQuery'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the content of the SQL script.
        /// </summary>
        [JsonProperty(PropertyName = "content")]
        public SqlScriptContent Content { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Content == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Content");
            }
            if (Content != null)
            {
                Content.Validate();
            }
        }
    }
}
