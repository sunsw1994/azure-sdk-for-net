// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SparkBatchJobState
    {
        /// <summary>
        /// Initializes a new instance of the SparkBatchJobState class.
        /// </summary>
        public SparkBatchJobState()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SparkBatchJobState class.
        /// </summary>
        /// <param name="notStartedAt">the time that at which "not_started"
        /// livy state was first seen.</param>
        /// <param name="startingAt">the time that at which "starting" livy
        /// state was first seen.</param>
        /// <param name="runningAt">the time that at which "running" livy state
        /// was first seen.</param>
        /// <param name="deadAt">time that at which "dead" livy state was first
        /// seen.</param>
        /// <param name="successAt">the time that at which "success" livy state
        /// was first seen.</param>
        /// <param name="terminatedAt">the time that at which "killed" livy
        /// state was first seen.</param>
        /// <param name="recoveringAt">the time that at which "recovering" livy
        /// state was first seen.</param>
        /// <param name="currentState">the Spark job state.</param>
        public SparkBatchJobState(System.DateTimeOffset? notStartedAt = default(System.DateTimeOffset?), System.DateTimeOffset? startingAt = default(System.DateTimeOffset?), System.DateTimeOffset? runningAt = default(System.DateTimeOffset?), System.DateTimeOffset? deadAt = default(System.DateTimeOffset?), System.DateTimeOffset? successAt = default(System.DateTimeOffset?), System.DateTimeOffset? terminatedAt = default(System.DateTimeOffset?), System.DateTimeOffset? recoveringAt = default(System.DateTimeOffset?), string currentState = default(string), SparkRequest jobCreationRequest = default(SparkRequest))
        {
            NotStartedAt = notStartedAt;
            StartingAt = startingAt;
            RunningAt = runningAt;
            DeadAt = deadAt;
            SuccessAt = successAt;
            TerminatedAt = terminatedAt;
            RecoveringAt = recoveringAt;
            CurrentState = currentState;
            JobCreationRequest = jobCreationRequest;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the time that at which "not_started" livy state was
        /// first seen.
        /// </summary>
        [JsonProperty(PropertyName = "notStartedAt")]
        public System.DateTimeOffset? NotStartedAt { get; set; }

        /// <summary>
        /// Gets or sets the time that at which "starting" livy state was first
        /// seen.
        /// </summary>
        [JsonProperty(PropertyName = "startingAt")]
        public System.DateTimeOffset? StartingAt { get; set; }

        /// <summary>
        /// Gets or sets the time that at which "running" livy state was first
        /// seen.
        /// </summary>
        [JsonProperty(PropertyName = "runningAt")]
        public System.DateTimeOffset? RunningAt { get; set; }

        /// <summary>
        /// Gets or sets time that at which "dead" livy state was first seen.
        /// </summary>
        [JsonProperty(PropertyName = "deadAt")]
        public System.DateTimeOffset? DeadAt { get; set; }

        /// <summary>
        /// Gets or sets the time that at which "success" livy state was first
        /// seen.
        /// </summary>
        [JsonProperty(PropertyName = "successAt")]
        public System.DateTimeOffset? SuccessAt { get; set; }

        /// <summary>
        /// Gets or sets the time that at which "killed" livy state was first
        /// seen.
        /// </summary>
        [JsonProperty(PropertyName = "killedAt")]
        public System.DateTimeOffset? TerminatedAt { get; set; }

        /// <summary>
        /// Gets or sets the time that at which "recovering" livy state was
        /// first seen.
        /// </summary>
        [JsonProperty(PropertyName = "recoveringAt")]
        public System.DateTimeOffset? RecoveringAt { get; set; }

        /// <summary>
        /// Gets or sets the Spark job state.
        /// </summary>
        [JsonProperty(PropertyName = "currentState")]
        public string CurrentState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jobCreationRequest")]
        public SparkRequest JobCreationRequest { get; set; }

    }
}
